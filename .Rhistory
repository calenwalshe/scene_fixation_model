condition == "NOCHANGE.DUR",
1,
ifelse(condition == "UP.DUR", 2, 3)
)
) %>%
group_by(condition) %>%
summarize(bin = list(hist(
timestamp, breaks = breaks, plot = F
)))
model.binned <-
map2(model.binned$bin, model.binned$condition, function(x, y)
data.frame(
time = x$mids,
counts = x$counts,
density = x$density,
condition = y,
p = x$counts/sum(x$counts)
))
model.binned <- do.call(rbind, model.binned)
model.binned <- model.binned %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p), condition = as.factor(condition)) %>%
select(-counts) %>%
ungroup()
model.binned
human.dat
model.binned
head(model.binned)
model.binned <- model.binned %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p), condition = as.factor(condition)) %>%
select(-counts) %>%
ungroup() %>%
as_tibble()
library(ggplot2)
library(tidyr)
library(dplyr)
library(stringr)
library(purrr)
source('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_analysis/import_matlab.R')
human.dat <- human.dat %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p)) %>%
mutate(d_type = "human") %>%
ungroup()
model.dat <- change.events %>%
filter(event.name %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
mutate(timestamp = ifelse(timestamp > 1170, 1170,timestamp))
breaks <- seq(0, 1200, 60)
model.binned <- model.dat %>%
mutate(
condition = event.name,
event.name = NULL,
condition = ifelse(
condition == "NOCHANGE.DUR",
1,
ifelse(condition == "UP.DUR", 2, 3)
)
) %>%
group_by(condition) %>%
summarize(bin = list(hist(
timestamp, breaks = breaks, plot = F
)))
model.binned <-
map2(model.binned$bin, model.binned$condition, function(x, y)
data.frame(
time = x$mids,
counts = x$counts,
density = x$density,
condition = y,
p = x$counts/sum(x$counts)
))
model.binned <- do.call(rbind, model.binned)
model.binned <- model.binned %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p), condition = as.factor(condition)) %>%
select(-counts) %>%
ungroup() %>%
as_tibble()
human.dat <- human.dat %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p)) %>%
mutate(d_type = "human") %>%
ungroup()
model.dat <- change.events %>%
filter(event.name %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
mutate(timestamp = ifelse(timestamp > 1170, 1170,timestamp))
breaks <- seq(0, 1200, 60)
model.binned <- model.dat %>%
mutate(
condition = event.name,
event.name = NULL,
condition = ifelse(
condition == "NOCHANGE.DUR",
1,
ifelse(condition == "UP.DUR", 2, 3)
)
) %>%
group_by(condition) %>%
summarize(bin = list(hist(
timestamp, breaks = breaks, plot = F
)))
model.binned <-
map2(model.binned$bin, model.binned$condition, function(x, y)
data.frame(
time = x$mids,
counts = x$counts,
density = x$density,
condition = y,
p = x$counts/sum(x$counts)
))
model.binned <- do.call(rbind, model.binned)
model.binned <- model.binned %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p), condition = as.factor(condition)) %>%
select(-counts) %>%
ungroup() %>%
as_tibble()
human.dat <- human.dat %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p)) %>%
mutate(d_type = "human") %>%
ungroup()
model.dat <- change.events %>%
filter(event.name %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
mutate(timestamp = ifelse(timestamp > 1170, 1170,timestamp))
breaks <- seq(0, 1200, 60)
model.binned <- model.dat %>%
mutate(
condition = event.name,
event.name = NULL,
condition = ifelse(
condition == "NOCHANGE.DUR",
1,
ifelse(condition == "UP.DUR", 2, 3)
)
) %>%
group_by(condition) %>%
summarize(bin = list(hist(
timestamp, breaks = breaks, plot = F
)))
model.binned <-
map2(model.binned$bin, model.binned$condition, function(x, y)
data.frame(
time = x$mids,
counts = x$counts,
density = x$density,
condition = y,
p = x$counts/sum(x$counts)
))
model.binned <- do.call(rbind, model.binned)
model.binned
model.binned <- model.binned %>%
group_by(condition) %>%
mutate(cum_p = cumsum(p), condition = as.factor(condition)) %>%
select(-counts) %>%
ungroup() %>%
as_tibble()
model.binned <- model.binned %>%
group_by(condition)
model.binned <- model.binned
model.binned
model.binned$condition <- as.factor(condition)
model.binned$condition <- as.factor(model.binned$condition)
model.binned
all.dat <- bind_rows(list(human.dat, model.binned))
ggplot(all.dat) +
geom_point(data = all.dat %>% filter(d_type == "human"), aes(x = time, y = cumulative_p, colour = condition)) +
geom_line(data = all.dat %>% filter(d_type == "model"), aes(x = time, y = cumulative_p, colour = condition))
ggplot(model.dat, aes(x = timestamp, colour = event.name)) + geom_density()
model.dat
head(model.dat)
head(model.binned)
head(model.dat)
human.dat
head(human.dat)
head(moel.dat)
head(model.dat)
(model.dat$event.name)
factor(model.dat$event.name)
factor(model.dat$event.name, levels = c(1,2,3))
factor(model.dat$event.name)
factor(model.dat$event.name, c("1", "2", "3"))
factor(model.dat$event.name, levels = c("1", "2", "3"))
?factor
factor(model.dat$event.name, labels = c("1", "2", "3"))
model.dat$event.name <- factor(model.dat$event.name, labels = c("1", "2", "3"))
ggplot(model.dat, aes(x = timestamp, colour = event.name)) + geom_density() + geom_point(data= human.dat, aes(x = time, y = p, con))
ggplot(model.dat, aes(x = timestamp, colour = event.name)) + geom_density() + geom_point(data= human.dat, aes(x = time, y = p))
ggplot(model.dat, aes(x = timestamp, colour = event.name)) + geom_density()
ggplot(model.dat, aes(x = timestamp, colour = event.name)) + geom_density() + geom_point(data= human.dat, aes(x = time, y = p, colour = condition))
ggplot(model.dat, aes(x = timestamp, colour = event.name)) +
geom_histogram(bins = 20) +
geom_point(data = human.dat, aes(x = time, y = p, colour = condition))
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv')
human.raw
head(human.raw)
(human.raw$X1)$unique
(human.raw$X1) %>% unique
(human.raw$X2) %>% unique
(human.raw$X11) %>% unique
(human.raw$X256) %>% unique
nrow(human.raw)
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
human.raw
head(human.raw)
model.dat <- change.events %>%
filter(event.name %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
mutate(timestamp = ifelse(timestamp > 1170, 1170,timestamp))
model.dat
head(model.dat)
change.events
head(change.events)
names(change.events)
names(change.events) <- c("time", "event", "trial", "condition")
model.dat <- change.events %>%
filter(event.name %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR"))
model.dat <- change.events %>%
filter(condition %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR"))
model.dat
change.events
human.raw
model.dat$condition
model.dat$condition <- factor(model.dat$condition, labels = c(1,2,3))
model.dat
human.raw$condition
human.dat$condition <- factor(huan.dat$condition, labels = c(1,2,3))
human.dat$condition <- factor(human.dat$condition, labels = c(1,2,3))
human.dat
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
names(change.events) <- c("time", "event", "trial", "condition")
model.dat <- change.events %>%
filter(condition %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR"))
human.raw$condition <- factor(human.raw$condition, labels = c(1,2,3))
human.raw
model.dat
model.dat$condition <- factor(model.dat$condition, labels = c(1,2,3))
model.dat
head(model.dat)
head(human.dat)
head(human.raw)
source('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_analysis/import_matlab.R')
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
names(change.events) <- c("duration", "event", "trial", "condition")
model.dat <- change.events %>%
filter(condition %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR"))
model.dat$condition <- factor(model.dat$condition, labels = c(1,2,3))
human.raw$condition <- factor(human.raw$condition, labels = c(1,2,3))
model.dat
head(model.dat)
head(model.dat)
head(human.raw)
model.dat <- change.events %>%
filter(condition %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
select(-event) %>%
mutate(experiment = 1)
head(model.dat)
head(human.raw)
model.dat$condition <- factor(model.dat$condition, labels = c(1,2,3))
human.raw$condition <- factor(human.raw$condition, labels = c(1,2,3))
head(model.dat)
head(human.raw)
rbind(model.dat, human.raw)
duration.data <- rbind(model.dat, human.raw)
duration.data
human.raw$d_type <- "human"
names(change.events) <- c("duration", "event", "trial", "condition")
model.dat <- change.events %>%
filter(condition %in% c("DOWN.DUR", "UP.DUR", "NOCHANGE.DUR")) %>%
select(-event) %>%
mutate(experiment = 1) %>%
mutate(d_type = "model")
model.dat$condition <- factor(model.dat$condition, labels = c(1,2,3))
human.raw$condition <- factor(human.raw$condition, labels = c(1,2,3))
duration.data <- rbind(model.dat, human.raw)
model.binned <- model.dat %>%
mutate(
condition = event.name,
event.name = NULL,
condition = ifelse(
condition == "NOCHANGE.DUR",
1,
ifelse(condition == "UP.DUR", 2, 3)
)
) %>%
group_by(condition) %>%
summarize(bin = list(hist(
timestamp, breaks = breaks, plot = F
)))
ggplot(duration.data, aes(x = duration, colour = condition, linetype = d_type)) + geom_density()
ggplot(duration.data %>% filter(condition == 1), aes(x = duration, colour = condition, linetype = d_type)) + geom_density()
ggplot(duration.data %>% filter(condition == 1), aes(x = duration, colour = condition, linetype = d_type)) + geom_histogram()
ggplot(duration.data %>% filter(condition == 1), aes(x = duration, colour = condition, linetype = d_type)) + geom_histogram(stat = "bin")
?hist
hist(0:1200, breaks = seq(0, 1200, 60))
hist(0:1200, breaks = seq(0, 1200, 60), plot= F)
?hist
hist(0:1200, breaks = seq(0, 1200, 60), right = T, plot= F)
hist(0:1200, breaks = seq(0, 1200, 60), right = F, plot= F)
human.dat
human.raw
human.raw %>% summarize(bin = hist(duration, breaks = seq(0, 1200, 60, right= F, plot= F)))
human.raw %>% group_by(condition) %>% summarize(bin = hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
human.raw %>% group_by(condition) %>% summarize(bin = hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F))
human.raw %>% group_by(condition) %>% summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
bin.output <- human.raw %>%
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
map(bin.output$bin, function(x) {
condition <- x$condition
p         <- x$count/sum(x$count)
})
map(bin.output$bin, function(x) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$duration
})
bin.output$bin
bin.output$bin[[1]]
bin.output$bin[[1]]$mids
bin.output$bin[[1]]$mids %>% length
bin.output$bin[[1]]$edges %>% length
bin.output$bin[[1]]$breaks %>% length
bin.output$bin[[1]]$density %>% length
map(bin.output$bin, function(x) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
})
map(bin.output$bin, function(x) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
data.frame(condition = condition, p = p, duration = duration)
})
map(bin.output$bin, function(x) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
#  data.frame(condition = condition, p = p, duration = duration)
})
bin.output
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- condition
#data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y$condition
#data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y$condition
#data.frame(condition = condition, p = p, duration = duration)
})
?map2
bin.output$condition
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
#data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y[[1]]
#data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
#data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
})
map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
binned.combined
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
human.raw
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
human.raw
head(human.raw)
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
experiment_nr <- 1
bin.output <- human.raw %>%
filter(experiment = experiment_nr)
human.raw
head(human.raw)
experiment_nr <- 1
bin.output <- human.raw %>%
filter(experiment == experiment_nr)
bin.output
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
binned.combined
bin.output$bin
bin.output <- human.raw %>%
filter(experiment == experiment_nr)
bin.output
head(bin.output)
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
bin.output
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
binned.combined
bin.output$bin
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
bin.output <- human.raw %>%
filter(experiment == experiment_nr)
bin.output
head(bin.output)
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
bin.output <- human.raw %>%
filter(experiment == experiment_nr) %>%
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
bin.output
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
head(binned.combined)
write.csv(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt' sep = " ")
write.csv(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt', sep = " ")
write.csv(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt', sep = "")
write.table(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt', sep = " ")
write.table(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt', sep = " ", include.row = F)
write.table(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp1.txt', sep = " ",row.names = F)
breaks
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
b
binned.combined
human.raw <- read.csv('~/Dropbox/Calen/Work/ucm/scene_fixation_model/_data/human_raw_data.csv', header = T)
experiment_nr <- 2
bin.output <- human.raw %>%
filter(experiment == experiment_nr) %>%
group_by(condition) %>%
summarize(bin = list(hist(duration, breaks = seq(0, 1200, 60), right= F, plot= F)))
binned.combined <- map2(bin.output$bin, bin.output$condition, function(x,y) {
condition <- x$condition
p         <- x$count/sum(x$count)
duration  <- x$mids
condition <- y
data.frame(condition = condition, p = p, duration = duration)
}) %>%
do.call(rbind, .)
write.table(binned.combined, file = '~/Dropbox/Calen/Dropbox/exp2.txt', sep = " ",row.names = F)
